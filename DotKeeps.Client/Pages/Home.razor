@using DotKeeps.Shared
@page "/"

<PageTitle>DotKeeps Home</PageTitle>

<div class="flex justify-between gap-3 md:gap-6 p-3 md:p-6">
  <CustomButton Label="+ New Item" Theme="action" Action="CreateItem" />
  <div class="hidden xl:grid grid-cols-2 items-center gap-2 md:gap-3">
    <button @onclick="() => ChangeListDisplay(false)" class="@(ListDisplay ? "" : "text-blue-600")">
      <SvgIcon Data="@IconsData.ItemsList" class="text-2xl" />
    </button>
    <button @onclick="() => ChangeListDisplay(true)" class="@(ListDisplay ? "text-blue-600" : "")">
      <SvgIcon Data="@IconsData.ItemsGrid" class="text-2xl" />
    </button>
  </div>
</div>

<ul class="@(ListDisplay ? "grid xl:grid-cols-2" : "flex flex-col") gap-3 md:gap-4 p-3 md:p-6">
  @foreach (var (item, index) in KeepItems.Select((value, i) => (value, i)))
  {
    <KeepItemMenu Item="item" Delete="() => DeleteItem(index)" />
  }
</ul>

@code {
  private List<KeepItem> KeepItems = [
  KeepItem.New(KeepItemType.MOVIE, "Testing 1"),
KeepItem.New(KeepItemType.SERIE, "Testing 2"),
KeepItem.New(KeepItemType.MANGA, "Testing 3"),
KeepItem.New(KeepItemType.COMIC, "Testing 4"),
];

  private bool ListDisplay = false;

  private void CreateItem()
  {
    KeepItems.Insert(0, KeepItem.New(KeepItemType.NONE, "New"));
  }

  private void DeleteItem(int index)
  {
    KeepItems.RemoveAt(index);
  }

  private void ChangeListDisplay(bool value)
  {
    ListDisplay = value;
  }
}