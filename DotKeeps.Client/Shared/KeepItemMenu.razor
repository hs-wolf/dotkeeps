@using DotKeeps.Shared

@if (Item != null)
{
  <div class="flex flex-col bg-neutral-200 rounded-sm">
  <button class="flex justify-between items-center gap-2 p-2 md:gap-3 md:p-3" @onclick="ToggleShowMenu">
    <p class="flex gap-2 text-sm md:text-base text-start @(ShowMenu ? null : "truncate")">
      <span class="text-blue-800">
        @(Formatters.CapitalizeFirstLetter(Item.Type.ToString() ?? ""))
      </span>
      <span class="flex gap-2">
        @if (ShowFieldSeason && !String.IsNullOrEmpty(Item.Data.Season))
          {
            <span>
              @("Season " + Item.Data.Season)
            </span>
          }
          @if (ShowFieldEpisode && !String.IsNullOrEmpty(Item.Data.Episode))
          {
            <span>
              @("Episode " + Item.Data.Episode)
            </span>
          }
          @if (ShowFieldVolume && !String.IsNullOrEmpty(Item.Data.Volume))
          {
            <span>
              @("Volume " + Item.Data.Volume)
            </span>
          }
          @if (ShowFieldChapter && !String.IsNullOrEmpty(Item.Data.Chapter))
          {
            <span>
              @("Chapter " + Item.Data.Chapter)
            </span>
          }
        </span>
        <span>@(String.IsNullOrEmpty(Item.Name) ? "Name" : Item.Name)</span>
      </p>
      <span class="self-start transition-transform @(ShowMenu ? "rotate-180" : null)">
        <SvgIcon Data="@IconsData.ChevronDown" class="text-xl md:text-2xl" />
      </span>
    </button>
    @if (ShowMenu)
    {
      <div class="flex flex-col gap-2 px-2 pb-2 md:px-3 md:pb-3">
        <div class="flex flex-col md:flex-row md:items-center gap-2">
          <InputSelect @bind-Value="Item.Type" class="w-full md:w-auto h-8 md:h-10 px-2 md:px-3 bg-neutral-300 rounded-sm">
            @foreach (KeepItemType Type in Enum.GetValues(typeof(KeepItemType)))
            {
              <option value="@Type">@Formatters.CapitalizeFirstLetter(Type.ToString())</option>
            }
          </InputSelect>
          <InputText @bind-Value="Item.Name" class="custom-input" placeholder="Name" />
        </div>
        @if (!ShowTypeNone)
        {
          <div class="grid grid-cols-2 md:flex gap-2">
            @if (ShowFieldSeason)
            {
              <InputText @bind-Value="Item.Data.Season" class="custom-input max-w-32" placeholder="Season" />
            }
            @if (ShowFieldEpisode)
            {
              <InputText @bind-Value="Item.Data.Episode" class="custom-input max-w-32" placeholder="Episode" />
            }
            @if (ShowFieldVolume)
            {
              <InputText @bind-Value="Item.Data.Volume" class="custom-input max-w-32" placeholder="Volume" />
            }
            @if (ShowFieldChapter)
            {
              <InputText @bind-Value="Item.Data.Chapter" class="custom-input max-w-32" placeholder="Chapter" />
            }
          </div>
        }
        <div class="flex justify-end items-center gap-2 w-full md:w-auto">
          <button @onclick="ToggleShowMenu">
            <SvgIcon Data="@IconsData.CircleCheck" class="text-2xl md:text-3xl text-green-700" />
          </button>
          <button @onclick="ToggleShowMenu">
            <SvgIcon Data="@IconsData.TagEdit" class="text-2xl md:text-3xl text-blue-700" />
          </button>
          <button @onclick="ToggleShowMenu">
            <SvgIcon Data="@IconsData.TrashCan" class="text-2xl md:text-3xl text-red-700" />
          </button>
        </div>
      </div>
    }
  </div>
}

@code {
  [Parameter] public KeepItem? Item { get; set; }

  private bool ShowMenu = false;

  private bool ShowTypeNone => Item?.Type == KeepItemType.NONE ? true : false;
  private bool ShowTypeSerie => Item?.Type == KeepItemType.SERIE ? true : false;
  private bool ShowTypeMovie => Item?.Type == KeepItemType.MOVIE ? true : false;
  private bool ShowTypeComic => Item?.Type == KeepItemType.COMIC ? true : false;
  private bool ShowTypeAnime => Item?.Type == KeepItemType.ANIME ? true : false;
  private bool ShowTypeManga => Item?.Type == KeepItemType.MANGA ? true : false;
  private bool ShowTypeManhua => Item?.Type == KeepItemType.MANHUA ? true : false;
  private bool ShowTypeManhwa => Item?.Type == KeepItemType.MANHWA ? true : false;

  private bool ShowFieldSeason => ShowTypeSerie || ShowTypeAnime;
  private bool ShowFieldEpisode => ShowTypeSerie || ShowTypeAnime;
  private bool ShowFieldVolume => ShowTypeComic || ShowTypeManga || ShowTypeManhua || ShowTypeManhwa;
  private bool ShowFieldChapter => ShowTypeComic || ShowTypeManga || ShowTypeManhua || ShowTypeManhwa;

  void ToggleShowMenu()
  {
    ShowMenu = !ShowMenu;
  }
}